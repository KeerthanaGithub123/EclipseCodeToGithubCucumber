status = warn
# Rotate log file
appender.rolling.type = RollingFile
appender.rolling.name = LogToRollingFile
#specify the file name for creating log
appender.rolling.fileName = RahulShettyAutomation.log
appender.rolling.filePattern = logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d [%-5level] %C [%t] %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
#if the size exceeds then the log folder will be created and 10*max=10*10=100mb data will be backed up
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 10

# Log to console and rolling file
# below line we should provide the stepDefiniftions package name
logger.app.name = parallel
logger.app.level = debug
logger.app.additivity = false
logger.app.appenderRef.rolling.ref = LogToRollingFile
rootLogger.level = info